apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: dis
  name: hotel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hotel
  template:
    metadata:
      labels:
        app: hotel
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "4004"
        prometheus.io/scheme: http
        prometheus.io/path: "/actuator/prometheus"
    spec:
      containers:
        - name: pro
          image: distributed-information-systems_hotel
          imagePullPolicy: Never
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "docker,kubernetes"
            - name: SPRING_CONFIG_LOCATION
              value: file:/config-repo/application.yml,file:/config-repo/hotel.yml
          envFrom:
            - secretRef:
                name: rabbitmq-credentials
          ports:
            - containerPort: 8080
          resources:
            limits:
              memory: 500Mi
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /actuator/health/liveness
              port: 4004
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 20
            successThreshold: 1
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /actuator/health/readiness
              port: 4004
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
            successThreshold: 1
          volumeMounts:
            - name: config-repo-volume
              mountPath: /config-repo
      volumes:
        - name: config-repo-volume
          configMap:
            name: config-repo-hotel
---
apiVersion: v1
kind: Service
metadata:
  namespace: dis
  name: hotel
spec:
  selector:
    app: hotel
  ports:
    - port: 8080
      targetPort: 8080