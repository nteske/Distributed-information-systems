apiVersion: v1
items:
  - apiVersion: v1
    kind: Namespace
    metadata:
      name: dis
      labels:
        name: dis
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: fabric8-rbac
    subjects:
      - kind: ServiceAccount
        # Reference to upper's `metadata.name`
        name: default
        # Reference to upper's `metadata.namespace`
        namespace: dis
    roleRef:
      kind: ClusterRole
      name: cluster-admin
      apiGroup: rbac.authorization.k8s.io
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: gateway
      namespace: dis
      name: gateway
    spec:
      type: LoadBalancer
      ports:
        - name: "8443"
          port: 8443
          targetPort: 9000
      selector:
        io.kompose.service: gateway
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: mongodb
      namespace: dis
      name: mongodb
    spec:
      type: NodePort
      ports:
        - name: "27018"
          port: 27018
          targetPort: 27018
      selector:
        io.kompose.service: mongodb
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: auth-server
      namespace: dis
      name: auth-server
    spec:
      ports:
        - name: "9999"
          port: 9999
          targetPort: 9999
      selector:
        io.kompose.service: auth-server
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: eureka
      namespace: dis
      name: eureka
    spec:
      ports:
        - name: "8761"
          port: 8761
          targetPort: 8761
      selector:
        io.kompose.service: eureka
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: config-server
      namespace: dis
      name: config-server
    spec:
      ports:
        - name: "8888"
          port: 8888
          targetPort: 8888
      selector:
        io.kompose.service: config-server
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: mysql
      namespace: dis
      name: mysql
    spec:
      type: NodePort
      ports:
        - name: "3306"
          port: 3306
          targetPort: 3306
      selector:
        io.kompose.service: mysql
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: rabbitmq
      namespace: dis
      name: rabbitmq
    spec:
      type: NodePort
      ports:
        - name: "5672"
          port: 5672
          targetPort: 5672
        - name: "15672"
          port: 15672
          targetPort: 15672
      selector:
        io.kompose.service: rabbitmq
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: zipkin
      namespace: dis
      name: zipkin
    spec:
      type: NodePort
      ports:
        - name: "9411"
          port: 9411
          targetPort: 9411
      selector:
        io.kompose.service: zipkin
    status:
      loadBalancer: {}
  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      name: gateway-ingress
      namespace: dis
    spec:
      rules:
      - host: testnemanja.com
        http:
          paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: gateway
                port:
                  number: 8443
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: auth-server
      namespace: dis
      name: auth-server
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: auth-server
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
            kompose.version: 1.26.0 (40646f47)
          creationTimestamp: null
          labels:
            io.kompose.network/app: "true"
            io.kompose.service: auth-server
        spec:
          containers:
            - env:
                - name: CONFIG_SERVER_PWD
                  value: dev-pwd
                - name: CONFIG_SERVER_USR
                  value: dev-usr
                - name: SPRING_PROFILES_ACTIVE
                  value: docker
              image: distributed-information-systems_auth-server
              name: auth-server
              imagePullPolicy: Never
              resources:
                limits:
                  memory: "367001600"
          restartPolicy: Always
    status: {}
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: app
      namespace: dis
      creationTimestamp: null
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  io.kompose.network/app: "true"
      podSelector:
        matchLabels:
          io.kompose.network/app: "true"
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: config-server
      namespace: dis
      name: config-server
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: config-server
      strategy:
        type: Recreate
      template:
        metadata:
          namespace: dis
          annotations:
            kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
            kompose.version: 1.26.0 (40646f47)
          creationTimestamp: null
          labels:
            io.kompose.network/app: "true"
            io.kompose.service: config-server
        spec:
          containers:
            - env:
                - name: ENCRYPT_KEY
                  value: my-very-secure-encrypt-key
                - name: SPRING_PROFILES_ACTIVE
                  value: docker,native
                - name: SPRING_SECURITY_USER_NAME
                  value: dev-usr
                - name: SPRING_SECURITY_USER_PASSWORD
                  value: dev-pwd
              image: distributed-information-systems_config-server
              name: config-server
              imagePullPolicy: Never
              resources:
                limits:
                  memory: "367001600"
              volumeMounts:
                - mountPath: /config-repo
                  name: c
          restartPolicy: Always
          volumes:
            - name: c
              persistentVolumeClaim:
                claimName: c
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: c
      namespace: dis
      name: c
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: eureka
      namespace: dis
      name: eureka
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: eureka
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
            kompose.version: 1.26.0 (40646f47)
          creationTimestamp: null
          labels:
            io.kompose.network/app: "true"
            io.kompose.service: eureka
        spec:
          containers:
            - env:
                - name: CONFIG_SERVER_PWD
                  value: dev-pwd
                - name: CONFIG_SERVER_USR
                  value: dev-usr
                - name: SPRING_PROFILES_ACTIVE
                  value: docker
              image: distributed-information-systems_eureka
              imagePullPolicy: Never
              name: eureka
              resources:
                limits:
                  memory: "367001600"
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: gateway
      namespace: dis
      name: gateway
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: gateway
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
            kompose.version: 1.26.0 (40646f47)
          creationTimestamp: null
          labels:
            io.kompose.network/app: "true"
            io.kompose.service: gateway
        spec:
          containers:
            - env:
                - name: CONFIG_SERVER_PWD
                  value: dev-pwd
                - name: CONFIG_SERVER_USR
                  value: dev-usr
                - name: SPRING_PROFILES_ACTIVE
                  value: docker
              image: distributed-information-systems_gateway
              name: gateway
              imagePullPolicy: Never
              ports:
                - containerPort: 8443
              resources:
                limits:
                  memory: "367001600"
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: hotel
      namespace: dis
      name: hotel
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: hotel
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
            kompose.version: 1.26.0 (40646f47)
          creationTimestamp: null
          labels:
            io.kompose.network/app: "true"
            io.kompose.service: hotel
        spec:
          containers:
            - env:
                - name: CONFIG_SERVER_PWD
                  value: dev-pwd
                - name: CONFIG_SERVER_USR
                  value: dev-usr
                - name: SPRING_PROFILES_ACTIVE
                  value: docker
              image: distributed-information-systems_hotel
              name: hotel
              imagePullPolicy: Never
              resources:
                limits:
                  memory: "367001600"
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: hotel-composite
      namespace: dis
      name: hotel-composite
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: hotel-composite
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
            kompose.version: 1.26.0 (40646f47)
          creationTimestamp: null
          labels:
            io.kompose.network/app: "true"
            io.kompose.service: hotel-composite
        spec:
          containers:
            - env:
                - name: CONFIG_SERVER_PWD
                  value: dev-pwd
                - name: CONFIG_SERVER_USR
                  value: dev-usr
                - name: SPRING_PROFILES_ACTIVE
                  value: docker
              image: distributed-information-systems_hotel-composite
              name: hotel-composite
              imagePullPolicy: Never
              resources:
                limits:
                  memory: "367001600"
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: location
      namespace: dis
      name: location
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: location
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
            kompose.version: 1.26.0 (40646f47)
          creationTimestamp: null
          labels:
            io.kompose.network/app: "true"
            io.kompose.service: location
        spec:
          containers:
            - env:
                - name: CONFIG_SERVER_PWD
                  value: dev-pwd
                - name: CONFIG_SERVER_USR
                  value: dev-usr
                - name: SPRING_PROFILES_ACTIVE
                  value: docker
              image: distributed-information-systems_location
              name: location
              imagePullPolicy: Never
              resources:
                limits:
                  memory: "367001600"
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: mongodb
      namespace: dis
      name: mongodb
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: mongodb
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
            kompose.version: 1.26.0 (40646f47)
          creationTimestamp: null
          labels:
            io.kompose.network/app: "true"
            io.kompose.service: mongodb
        spec:
          containers:
            - args:
                - mongod
                - --smallfiles
                - --port
                - "27018"
              image: mongo:3.6.9
              name: mongodb
              ports:
                - containerPort: 27018
              resources:
                limits:
                  memory: "367001600"
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: mysql
      namespace: dis
      name: mysql
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: mysql
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
            kompose.version: 1.26.0 (40646f47)
          creationTimestamp: null
          labels:
            io.kompose.network/app: "true"
            io.kompose.service: mysql
        spec:
          containers:
            - env:
                - name: MYSQL_DATABASE
                  value: review-db
                - name: MYSQL_PASSWORD
                  value: pwd
                - name: MYSQL_ROOT_PASSWORD
                  value: rootpwd
                - name: MYSQL_USER
                  value: user
              image: mysql:5.7
              name: mysql
              ports:
                - containerPort: 3306
              resources:
                limits:
                  memory: "367001600"
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: rabbitmq
      namespace: dis
      name: rabbitmq
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: rabbitmq
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
            kompose.version: 1.26.0 (40646f47)
          creationTimestamp: null
          labels:
            io.kompose.network/app: "true"
            io.kompose.service: rabbitmq
        spec:
          containers:
            - image: rabbitmq:3.7.8-management
              name: rabbitmq
              ports:
                - containerPort: 5672
                - containerPort: 15672
              resources:
                limits:
                  memory: "367001600"
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: review
      namespace: dis
      name: review
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: review
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
            kompose.version: 1.26.0 (40646f47)
          creationTimestamp: null
          labels:
            io.kompose.network/app: "true"
            io.kompose.service: review
        spec:
          containers:
            - env:
                - name: CONFIG_SERVER_PWD
                  value: dev-pwd
                - name: CONFIG_SERVER_USR
                  value: dev-usr
                - name: SPRING_PROFILES_ACTIVE
                  value: docker
              image: distributed-information-systems_review
              name: review
              imagePullPolicy: Never
              resources:
                limits:
                  memory: "367001600"
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: room
      namespace: dis
      name: room
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: room
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
            kompose.version: 1.26.0 (40646f47)
          creationTimestamp: null
          labels:
            io.kompose.network/app: "true"
            io.kompose.service: room
        spec:
          containers:
            - env:
                - name: CONFIG_SERVER_PWD
                  value: dev-pwd
                - name: CONFIG_SERVER_USR
                  value: dev-usr
                - name: SPRING_PROFILES_ACTIVE
                  value: docker
              image: distributed-information-systems_room
              name: room
              imagePullPolicy: Never
              resources:
                limits:
                  memory: "367001600"
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: zipkin
      namespace: dis
      name: zipkin
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: zipkin
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: C:\kompose\kompose.exe convert -f docker-compose.yml -o kompose.yaml
            kompose.version: 1.26.0 (40646f47)
          creationTimestamp: null
          labels:
            io.kompose.network/app: "true"
            io.kompose.service: zipkin
        spec:
          containers:
            - env:
                - name: RABBIT_ADDRESSES
                  value: rabbitmq
                - name: STORAGE_TYPE
                  value: mem
              image: openzipkin/zipkin:2.12.9
              name: zipkin
              ports:
                - containerPort: 9411
              resources:
                limits:
                  memory: "536870912"
          restartPolicy: Always
    status: {}
kind: List
metadata: {}

